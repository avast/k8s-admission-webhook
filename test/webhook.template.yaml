apiVersion: v1
kind: Secret
metadata:
  name: k8s-admission-webhook-tls-secret
  namespace: default
data:
  tls_private_key: ${WEBHOOK_TLS_PRIVATE_KEY_B64}
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: k8s-admission-webhook-tls-config
  namespace: default
data:
  tls_cert: |
${WEBHOOK_TLS_CERT}
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: k8s-admission-webhook-config
  namespace: default
data:
  annotation_rules_config: |
    annotationRules:
      Pod:
        policy: AllowAll
        exceptions:
          - "some-nasty-annotation"
      Ingress:
        policy: DenyAll
        exceptions:
          - "kubectl.kubernetes.io"
          - "ingress.kubernetes.io"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: k8s-admission-webhook
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: k8s-admission-webhook
  template:
    metadata:
      labels:
        app: k8s-admission-webhook
    spec:
      containers:
        - name: k8s-admission-webhook
          image: ${WEBHOOK_IMAGE}
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 8443
          env:
            #ANNOTATION_PREFIX_NAME_PLACEHOLDER
              #ANNOTATION_PREFIX_VALUE_PLACEHOLDER
            - name: TLS_CERT_FILE
              value: /data/ssl_certs/server-cert.pem
            - name: TLS_PRIVATE_KEY_FILE
              value: /data/ssl_keys/server-key.pem
            - name: LISTEN_PORT
              value: "8443"
            - name: RULE_RESOURCE_VIOLATION_MESSAGE
              value: "For more information, see https://internal.wiki/resources"
            - name: RULE_RESOURCE_LIMIT_CPU_REQUIRED
              value: "true"
            - name: RULE_RESOURCE_LIMIT_CPU_MUST_BE_NONZERO
              value: "true"
            - name: RULE_RESOURCE_LIMIT_MEMORY_REQUIRED
              value: "true"
            - name: RULE_RESOURCE_LIMIT_MEMORY_MUST_BE_NONZERO
              value: "true"
            - name: RULE_RESOURCE_REQUEST_CPU_REQUIRED
              value: "true"
            - name: RULE_RESOURCE_REQUEST_CPU_MUST_BE_NONZERO
              value: "true"
            - name: RULE_RESOURCE_REQUEST_MEMORY_REQUIRED
              value: "true"
            - name: RULE_RESOURCE_REQUEST_MEMORY_MUST_BE_NONZERO
              value: "true"
            - name: RULE_SECURITY_READONLY_ROOTFS_REQUIRED
              value: "true"
            - name: RULE_SECURITY_READONLY_ROOTFS_REQUIRED_WHITELIST_ENABLED
              value: "true"
            - name: RULE_INGRESS_VIOLATION_MESSAGE
              value: "For more information, see https://internal.wiki/ingresses"
            - name: RULE_INGRESS_COLLISION
              value: "true"
            - name: ANNOTATION_RULES_FILE
              value: /data/config/annotation-rules.yaml
          volumeMounts:
            - name: ssl-certs
              mountPath: "/data/ssl_certs"
              readOnly: true
            - name: ssl-keys
              mountPath: "/data/ssl_keys"
              readOnly: true
            - name: config
              mountPath: "/data/config"
              readOnly: true

      volumes:
        - name: config
          configMap:
            name: k8s-admission-webhook-config
            items:
              - key: annotation_rules_config
                path: annotation-rules.yaml
        - name: ssl-certs
          configMap:
            name: k8s-admission-webhook-tls-config
            items:
              - key: tls_cert
                path: server-cert.pem
        - name: ssl-keys
          secret:
            secretName: k8s-admission-webhook-tls-secret
            items:
              - key: tls_private_key
                path: server-key.pem
---
apiVersion: v1
kind: Service
metadata:
  name: k8s-admission-webhook 
  namespace: default
spec:
  ports:
  - port: 443
    targetPort: 8443
  selector:
    app: k8s-admission-webhook
---
apiVersion: admissionregistration.k8s.io/v1beta1
kind: ValidatingWebhookConfiguration
metadata:
  name: k8s-admission-webhook-cfg
webhooks:
  - name: k8s-admission-webhook.avast.com
    clientConfig:
      service:
        name: k8s-admission-webhook
        namespace: default
        path: "/validate"
      caBundle: ${WEBHOOK_CA_BUNDLE}
    rules:
      - operations: [ "CREATE", "UPDATE"]
        apiGroups: ["*"]
        apiVersions: ["*"]
        resources: ["pods", "deployments", "replicasets", "daemonsets", "jobs", "cronjobs", "ingresses","statefulsets"]
    failurePolicy: Fail
    namespaceSelector:
      matchLabels:
        webhook: enabled
---
# ClusterRole and ClusterRoleBinding are required only for ingress validation.
# Service account permissions are needed to read the cluster ingresses from all namespaces for the validation
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: k8-admission-webhook
rules:
  - apiGroups: ["extensions"]
    resources: ["ingresses"]
    verbs: ["get", "list"]

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: k8-admission-webhook-binding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: k8-admission-webhook
subjects:
  - kind: ServiceAccount
    name: default
    namespace: default

